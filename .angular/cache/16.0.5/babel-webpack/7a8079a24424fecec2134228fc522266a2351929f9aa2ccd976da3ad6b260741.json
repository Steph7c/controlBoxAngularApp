{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass UsuarioServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  obtenerUsuarios() {\n    return this.http.get('https://jsonplaceholder.typicode.com/users/');\n  }\n  obtenerUsuarioPorId(id) {\n    return this.http.get('https://jsonplaceholder.typicode.com/users/' + id);\n  }\n  eliminarUsuario(id) {\n    return this.http.delete('https://jsonplaceholder.typicode.com/users/' + id);\n  }\n  actualizarUsuario(usuario) {\n    return this.http.put('https://jsonplaceholder.typicode.com/users/', JSON.stringify(usuario));\n  }\n}\nUsuarioServiceService.ɵfac = function UsuarioServiceService_Factory(t) {\n  return new (t || UsuarioServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nUsuarioServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UsuarioServiceService,\n  factory: UsuarioServiceService.ɵfac,\n  providedIn: 'root'\n});\nexport { UsuarioServiceService };","map":{"version":3,"names":["UsuarioServiceService","constructor","http","obtenerUsuarios","get","obtenerUsuarioPorId","id","eliminarUsuario","delete","actualizarUsuario","usuario","put","JSON","stringify","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Pruebas\\controlBox\\controlBox\\src\\app\\Services\\usuario.service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Usuario } from '../Models/Usuario.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsuarioServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  obtenerUsuarios():Observable<any>{\n    return this.http.get('https://jsonplaceholder.typicode.com/users/');    \n  }\n\n  obtenerUsuarioPorId(id:number): Observable<any>{\n    return this.http.get('https://jsonplaceholder.typicode.com/users/' + id);  \n  }\n\n  eliminarUsuario(id:number):Observable<any>{\n    return this.http.delete('https://jsonplaceholder.typicode.com/users/' + id)\n  }\n\n  actualizarUsuario(usuario?:Usuario):Observable<any>{\n    return this.http.put('https://jsonplaceholder.typicode.com/users/',JSON.stringify(usuario));\n  }\n\n\n}\n"],"mappings":";;AAKA,MAGaA,qBAAqB;EAEhCC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,eAAeA,CAAA;IACb,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,6CAA6C,CAAC;EACrE;EAEAC,mBAAmBA,CAACC,EAAS;IAC3B,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAC,6CAA6C,GAAGE,EAAE,CAAC;EAC1E;EAEAC,eAAeA,CAACD,EAAS;IACvB,OAAO,IAAI,CAACJ,IAAI,CAACM,MAAM,CAAC,6CAA6C,GAAGF,EAAE,CAAC;EAC7E;EAEAG,iBAAiBA,CAACC,OAAgB;IAChC,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,6CAA6C,EAACC,IAAI,CAACC,SAAS,CAACH,OAAO,CAAC,CAAC;EAC7F;;AAlBWV,qBAAqB,C;mBAArBA,qBAAqB,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAArBjB,qBAAqB,C;SAArBA,qBAAqB;EAAAkB,OAAA,EAArBlB,qBAAqB,CAAAmB,IAAA;EAAAC,UAAA,EAFpB;AAAM;SAEPpB,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}